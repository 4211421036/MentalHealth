name: Enhanced Security Headers Check

on:
  schedule:
    - cron: '*/1 * * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: |
        npm install -g lighthouse
        sudo apt-get update
        sudo apt-get install -y curl

    - name: Run security checks
      id: security_check
      run: |
        echo "Running security checks..."
        
        # Store headers in a file
        curl -sI https://4211421036.github.io/MentalHealth/ > headers.txt
        
        # Initialize security report
        {
          echo "Security Report:"
          echo "=================="
          echo "Timestamp: $(date -u)"
          echo ""
        } > security_report.txt
        
        # Function to check header
        check_header() {
          local header="$1"
          local pattern="$2"
          local message="$3"
          if ! grep -qi "^$header:" headers.txt; then
            echo "❌ $message - Header missing" >> security_report.txt
            return 1
          elif [ -n "$pattern" ] && ! grep -qi "^$header:.*$pattern" headers.txt; then
            echo "⚠️ $message - Invalid value" >> security_report.txt
            return 1
          else
            echo "✅ $message - OK" >> security_report.txt
            return 0
          fi
        }
        
        # Check security headers
        FAILED=0
        
        check_header "content-security-policy" "default-src" "Content Security Policy" || ((FAILED++))
        check_header "strict-transport-security" "max-age=31536000" "HTTP Strict Transport Security" || ((FAILED++))
        check_header "cross-origin-opener-policy" "same-origin" "Cross-Origin Opener Policy" || ((FAILED++))
        check_header "x-content-type-options" "nosniff" "X-Content-Type-Options" || ((FAILED++))
        check_header "x-frame-options" "deny" "X-Frame-Options" || ((FAILED++))
        check_header "x-xss-protection" "1; mode=block" "X-XSS-Protection" || ((FAILED++))
        check_header "referrer-policy" "strict-origin" "Referrer-Policy" || ((FAILED++))
        check_header "permissions-policy" "" "Permissions-Policy" || ((FAILED++))
        check_header "cross-origin-resource-policy" "same-origin" "Cross-Origin Resource Policy" || ((FAILED++))
        
        # Run Lighthouse security scan
        lighthouse https://4211421036.github.io/MentalHealth/ \
          --chrome-flags="--headless --disable-gpu --no-sandbox" \
          --output json --output-path lighthouse-report.json \
          --only-categories security
        
        # Output report
        cat security_report.txt
        
        # Exit with error if any checks failed
        [ $FAILED -eq 0 ]

    - name: Create Issue on Failure
      if: failure()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          try {
            let issueBody = '# Security Check Failed\n\n';
            
            if (fs.existsSync('./security_report.txt')) {
              issueBody += fs.readFileSync('./security_report.txt', 'utf8');
            }
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.name,
              title: 'Security Headers Check Failed',
              body: issueBody
            });
          } catch (error) {
            console.error('Failed to create issue:', error);
          }
