name: Enhanced Security Headers Check

on:
  schedule:
    - cron: '*/1 * * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security checks
      run: |
        echo "Creating temp directory..."
        mkdir -p ./temp || { echo "Failed to create temp directory"; exit 1; }
        
        echo "Fetching headers..."
        curl -sI --retry 3 https://4211421036.github.io/MentalHealth/ > ./temp/headers.txt || {
          echo "Failed to fetch headers. Check the URL or network connectivity."
          exit 1
        }
        
        echo "Headers fetched successfully. Starting header checks..."
        echo "Headers fetched:"
        cat ./temp/headers.txt
        
        # Initialize report file
        cat > ./temp/report.txt << EOL
        Security Headers Report
        =====================
        Generated: $(date -u)
        
        Header Checks:
        EOL
        
        # Define headers to check (using a regular array)
        headers=(
          "Content-Security-Policy:Content Security Policy"
          "Strict-Transport-Security:HSTS"
          "X-Content-Type-Options:X-Content-Type-Options"
          "X-Frame-Options:X-Frame-Options"
          "X-XSS-Protection:X-XSS-Protection"
          "Referrer-Policy:Referrer Policy"
          "Cross-Origin-Opener-Policy:COOP"
          "Cross-Origin-Resource-Policy:CORP"
          "Permissions-Policy:Permissions Policy"
        )
        
        # Check each header
        FAILED=0
        echo "Checking headers..."
        for header_pair in "${headers[@]}"; do
          header=$(echo "$header_pair" | cut -d: -f1)
          description=$(echo "$header_pair" | cut -d: -f2)
          echo "Checking for header: $header"
          
          # Debugging: Check if the header exists in the file
          if grep -qi "^${header}:" ./temp/headers.txt; then
            echo "✅ $description - Present" >> ./temp/report.txt
          else
            echo "❌ $description - Missing" >> ./temp/report.txt
            ((FAILED++))
          fi
        done
        
        # Add summary
        echo -e "\nSummary:" >> ./temp/report.txt
        echo "Total headers missing: $FAILED" >> ./temp/report.txt
        
        # Display report
        cat ./temp/report.txt
        
        # Store report for later steps
        cp ./temp/report.txt security-report.txt
        
        # Exit with status based on results
        if [ $FAILED -gt 0 ]; then
          echo "Some security headers are missing"
          exit 1
        fi
