name: Enhanced Security Headers Check

on:
  schedule:
    - cron: '*/1 * * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security checks
      run: |
        echo "Creating temp directory..."
        mkdir -p ./temp || { echo "Failed to create temp directory"; exit 1; }

        echo "Fetching headers..."
        curl -sI --retry 3 https://4211421036.github.io/MentalHealth/ > ./temp/headers.txt || {
          echo "Failed to fetch headers. Check the URL or network connectivity."
          exit 1
        }

        echo "Headers fetched successfully. Starting header checks..."

        # Initialize report file
        cat > ./temp/report.txt << EOL
        Security Headers Report
        =====================
        Generated: $(date -u)
        
        Header Checks:
        EOL
        
        # Define headers to check
        declare -A headers=(
          ["Content-Security-Policy"]="Content Security Policy"
          ["Strict-Transport-Security"]="HSTS"
          ["X-Content-Type-Options"]="X-Content-Type-Options"
          ["X-Frame-Options"]="X-Frame-Options"
          ["X-XSS-Protection"]="X-XSS-Protection"
          ["Referrer-Policy"]="Referrer Policy"
          ["Cross-Origin-Opener-Policy"]="COOP"
          ["Cross-Origin-Resource-Policy"]="CORP"
          ["Permissions-Policy"]="Permissions Policy"
        )
        
        # Check each header
        FAILED=0
        for header in "${!headers[@]}"; do
          if grep -qi "^${header}:" ./temp/headers.txt; then
            echo "✅ ${headers[$header]} - Present" >> ./temp/report.txt
          else
            echo "❌ ${headers[$header]} - Missing" >> ./temp/report.txt
            ((FAILED++))
          fi
        done
        
        # Add summary
        echo -e "\nSummary:" >> ./temp/report.txt
        echo "Total headers missing: $FAILED" >> ./temp/report.txt
        
        # Display report
        cat ./temp/report.txt
        
        # Store report for later steps
        cp ./temp/report.txt security-report.txt
        
        # Exit with status based on results
        if [ $FAILED -gt 0 ]; then
          echo "Some security headers are missing"
          exit 1
        fi

    - name: Create Issue on Failure
      if: failure()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          try {
            const report = fs.existsSync('./security-report.txt') 
              ? fs.readFileSync('./security-report.txt', 'utf8')
              : 'Security check failed - no detailed report available';
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.name,
              title: '🚨 Security Headers Check Failed',
              body: `## Security Check Results\n\n\`\`\`\n${report}\n\`\`\`\n\nPlease review and update security headers configuration.`
            });
          } catch (error) {
            console.log('Error creating issue:', error);
          }

    - name: Clean up
      run: rm -rf ./temp
