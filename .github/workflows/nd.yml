name: Build and Publish 

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Pastikan semua commit ditarik

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test build output
        run: |
          if [ ! -d "dist" ]; then
            echo "dist directory not found"
            exit 1
          fi
          ls -la dist

      - name: Auto-update version
        run: |
          # Ambil versi terbaru dari NPM
          LATEST_VERSION=$(npm show @galihridhoutomo/mentalhealth version || echo "0.0.0")
          
          # Pecah versi menjadi komponen (major.minor.patch)
          IFS='.' read -r major minor patch <<< "$LATEST_VERSION"
          
          # Tambah 1 ke patch version
          NEW_VERSION="$major.$minor.$((patch + 1))"

          # Update versi di package.json
          npm version "$NEW_VERSION" --no-git-tag-version

          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV  # Simpan ke environment variable

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit updated version
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
          # Pastikan tidak ada perubahan yang menyebabkan error pull
          git add package.json
          git commit -m "Bump version to $NEW_VERSION [skip ci]" || echo "No changes to commit"
      
          # Simpan perubahan sementara jika ada perubahan yang belum dikomit
          git stash
      
          # Tarik perubahan terbaru dari remote repository
          git pull --rebase origin main || (git rebase --abort && git stash pop)
      
          # Kembalikan perubahan yang telah disimpan sebelumnya
          git stash pop || echo "No stash to pop"
      
          # Push versi terbaru ke repository
          git push origin main

      - name: Create GitHub Tag & Release
        if: success()
        run: |
          git tag "v$NEW_VERSION"
          git push origin "v$NEW_VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
