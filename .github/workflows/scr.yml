name: Security Hardening
on: [push, schedule]

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Erlang
        uses: erlef/setup-beam@v1
        with:
          otp-version: '26.0'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl

      - name: Compile Erlang modules
        run: erlc ip_blocker.erl security_monitor.erl mini_waf.erl

      - name: Run Security Systems
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}  # Jika pakai Slack
        run: |
          erl -pa . -noshell -eval '
            application:start(crypto),
            application:start(inets),
            code:load_file(ip_blocker),
            code:load_file(security_monitor),
            ip_blocker:start_link(),
            security_monitor:start(),
            lists:foreach(fun(IP) -> ip_blocker:block_ip(IP) end, ["1.1.1.1"]),
            timer:sleep(2000),
            init:stop()
          '

      - name: Deploy WAF Rules to Cloudflare
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/bab32fe292310337a52c8dbaac93e34a/firewall/rules" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_KEY }}" \
          -H "Content-Type: application/json" \
          --data '[
            {
              "description": "Block Suspicious Requests",
              "action": "block",
              "priority": 1,
              "filter": {
                "expression": "(http.request.uri.path contains \"/wp-admin\") or (http.request.uri contains \"../\") or (http.request.uri contains \"union+select\")",
                "paused": false
              },
              "paused": false
            }
          ]'

      - name: Deploy Cloudflare Worker
        run: |
          curl -X PUT "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/workers/scripts/security-headers" \
          -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
          -H "Content-Type: application/javascript" \
          --data-binary "@security-headers.js"

      - name: Deploy Cloudflare Security Rules
        run: |
          # 1. Enable HSTS dengan includeSubDomains dan preload
          curl -X PATCH "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/settings/security_header" \
          -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{
            "value": {
              "strict_transport_security": {
                "enabled": true,
                "max_age": 63072000,
                "include_subdomains": true,
                "preload": true
              }
            }
          }'

          # 2. Deploy CSP dan COOP
          curl -X PUT "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/workers/routes" \
          -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{
            "pattern": "4211421036.github.io/*",
            "script": "security-headers"
          }'
